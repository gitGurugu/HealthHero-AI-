"""add health related tables

Revision ID: 7034381c9d29
Revises: a13a1321534d
Create Date: 2025-06-12 18:27:54.304155

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7034381c9d29'
down_revision = 'a13a1321534d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 修改users表，将id改为user_id (BigInteger)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_column('users', 'id')
    op.add_column('users', sa.Column('user_id', sa.BigInteger(), nullable=False))
    op.create_primary_key('users_pkey', 'users', ['user_id'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    
    # 创建health_data表
    op.create_table('health_data',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('record_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('record_date', sa.Date(), nullable=False),
        sa.Column('height', sa.DECIMAL(precision=5, scale=2), nullable=True),
        sa.Column('weight', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('systolic_pressure', sa.SmallInteger(), nullable=True),
        sa.Column('diastolic_pressure', sa.SmallInteger(), nullable=True),
        sa.Column('blood_sugar', sa.DECIMAL(precision=4, scale=1), nullable=True),
        sa.Column('cholesterol', sa.DECIMAL(precision=4, scale=1), nullable=True),
        sa.CheckConstraint('height > 0', name='check_height_positive'),
        sa.CheckConstraint('weight BETWEEN 30 AND 300', name='check_weight_range'),
        sa.CheckConstraint('systolic_pressure BETWEEN 50 AND 250', name='check_systolic_range'),
        sa.CheckConstraint('diastolic_pressure BETWEEN 30 AND 150', name='check_diastolic_range'),
        sa.CheckConstraint('cholesterol >= 0', name='check_cholesterol_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('record_id')
    )
    
    # 创建diet_record表
    op.create_table('diet_record',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('record_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('record_date', sa.Date(), nullable=False),
        sa.Column('calories', sa.Integer(), nullable=True),
        sa.Column('food_detail', sa.Text(), nullable=True),
        sa.CheckConstraint('calories >= 0', name='check_calories_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('record_id')
    )
    
    # 创建exercise_log表
    op.create_table('exercise_log',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('log_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('exercise_type', sa.String(length=50), nullable=True),
        sa.Column('duration_minutes', sa.Integer(), nullable=True),
        sa.Column('log_date', sa.Date(), nullable=False),
        sa.CheckConstraint('duration_minutes > 0', name='check_duration_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('log_id')
    )
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exercise_log')
    op.drop_table('diet_record')
    op.drop_table('health_data')
    
    # 恢复users表的原始结构
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_pkey', 'users', type_='primary')
    op.drop_column('users', 'user_id')
    op.add_column('users', sa.Column('id', sa.Integer(), nullable=False))
    op.create_primary_key('users_pkey', 'users', ['id'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    # ### end Alembic commands ###
