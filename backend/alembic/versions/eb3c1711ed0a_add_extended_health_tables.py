"""add_extended_health_tables

Revision ID: eb3c1711ed0a
Revises: 8f38f8fe89a3
Create Date: 2025-06-12 18:51:34.740384

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eb3c1711ed0a'
down_revision = '8f38f8fe89a3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 创建睡眠记录表
    op.create_table('sleep_records',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('sleep_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('sleep_date', sa.Date(), nullable=False),
        sa.Column('bedtime', sa.Time(), nullable=True),
        sa.Column('wake_time', sa.Time(), nullable=True),
        sa.Column('sleep_duration', sa.DECIMAL(precision=3, scale=1), nullable=True),
        sa.Column('sleep_quality', sa.SmallInteger(), nullable=True),
        sa.Column('deep_sleep_hours', sa.DECIMAL(precision=3, scale=1), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.CheckConstraint('sleep_quality BETWEEN 1 AND 10', name='check_sleep_quality_range'),
        sa.CheckConstraint('sleep_duration >= 0', name='check_sleep_duration_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('sleep_id')
    )
    
    # 创建健康目标表
    op.create_table('health_goals',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('goal_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('goal_type', sa.Enum('WEIGHT_LOSS', 'WEIGHT_GAIN', 'EXERCISE', 'DIET', 'SLEEP', 'BLOOD_PRESSURE', 'CHOLESTEROL', 'OTHER', name='goaltype'), nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('description', sa.String(length=500), nullable=True),
        sa.Column('target_value', sa.DECIMAL(precision=8, scale=2), nullable=False),
        sa.Column('current_value', sa.DECIMAL(precision=8, scale=2), nullable=True),
        sa.Column('unit', sa.String(length=20), nullable=True),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('target_date', sa.Date(), nullable=False),
        sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'PAUSED', 'CANCELLED', name='goalstatus'), nullable=False),
        sa.CheckConstraint('target_value > 0', name='check_target_value_positive'),
        sa.CheckConstraint('current_value >= 0', name='check_current_value_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('goal_id')
    )
    
    # 创建症状记录表
    op.create_table('symptom_records',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('symptom_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('record_date', sa.Date(), nullable=False),
        sa.Column('symptom_type', sa.String(length=100), nullable=False),
        sa.Column('severity', sa.SmallInteger(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('duration_hours', sa.DECIMAL(precision=4, scale=1), nullable=True),
        sa.Column('location', sa.String(length=100), nullable=True),
        sa.Column('triggers', sa.Text(), nullable=True),
        sa.CheckConstraint('severity BETWEEN 1 AND 10', name='check_severity_range'),
        sa.CheckConstraint('duration_hours >= 0', name='check_duration_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('symptom_id')
    )
    
    # 创建身体测量记录表
    op.create_table('body_measurements',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('measurement_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('measurement_date', sa.Date(), nullable=False),
        sa.Column('waist_circumference', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('hip_circumference', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('chest_circumference', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('arm_circumference', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('thigh_circumference', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('body_fat_percentage', sa.DECIMAL(precision=4, scale=1), nullable=True),
        sa.Column('muscle_mass', sa.DECIMAL(precision=5, scale=1), nullable=True),
        sa.Column('bone_density', sa.DECIMAL(precision=4, scale=2), nullable=True),
        sa.Column('visceral_fat_level', sa.DECIMAL(precision=4, scale=1), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.CheckConstraint('body_fat_percentage BETWEEN 0 AND 100', name='check_body_fat_range'),
        sa.CheckConstraint('muscle_mass >= 0', name='check_muscle_mass_positive'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('measurement_id')
    )
    
    # 创建健康提醒表
    op.create_table('health_reminders',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('reminder_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('reminder_type', sa.Enum('MEDICATION', 'EXERCISE', 'MEAL', 'WATER', 'SLEEP', 'CHECKUP', 'MEASUREMENT', 'OTHER', name='remindertype'), nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('reminder_time', sa.Time(), nullable=False),
        sa.Column('frequency', sa.Enum('ONCE', 'DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM', name='reminderfrequency'), nullable=False),
        sa.Column('days_of_week', sa.String(length=20), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('custom_interval_days', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('reminder_id')
    )
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('health_reminders')
    op.drop_table('body_measurements')
    op.drop_table('symptom_records')
    op.drop_table('health_goals')
    op.drop_table('sleep_records')
    # ### end Alembic commands ###
